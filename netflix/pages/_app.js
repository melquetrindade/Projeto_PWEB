//import { Inter } from 'next/font/google'
import '../styles/globals.css'
import Head from 'next/head'
import MainContainer from '../componentes/mainContainer'
import "bootstrap/dist/css/bootstrap.min.css";
import React, {useState, useEffect} from 'react';
import styles from '../styles/login.module.css'
import {login, onAuthChanged, registrar} from '../utils/firebase/authService'
import {notification} from 'antd'

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default function MyApp({ Component, pageProps }) {

  const [user, setUser] = useState(null)
  const [hasLogin, setLogin] = useState(true)
  const [acessoVisitante, setVisitante] = useState(false)

  const handlerLogin = async () => {
    const valueEmail = document.getElementById('username').value
    const valuePass = document.getElementById('password').value

    if(valueEmail && valuePass){
      console.log(valueEmail)
      console.log(valuePass)

      login(valueEmail, valuePass).then((user) => console.log(user)).catch((error) => {
        if (error.code == 'auth/invalid-login-credentials') {
          openNotification({placement: 'topRight', title: 'ERRO', descricao: 'SENHA INVÁLIDA. TENTE NOVAMENTE!'})
        } else if (error.code == 'auth/invalid-email'){
          //console.log('email')
          openNotification({placement: 'topRight', title: 'ERRO', descricao: 'E-MAIL NÃO ENCONTRADO. CADASTRE-SE!'})
        }
      })
    }


  }

  useEffect(() => {
    function navHome(){
      return onAuthChanged((user) => {
        if(user){
          setUser(user)
        }
        else{
          setUser(user)
        }
      })
    }

    return navHome()

  },[])

  const toggleOpLogin = () => {
    if(hasLogin){
      setLogin(false)
    }
    else{
      setLogin(true)
    }
  }

  const opVisitante = () => {
    if(acessoVisitante == false){
      setVisitante(true)
    }
  }

  const handlerRegistrar = async () => {
    const valueEmail = document.getElementById('username').value
    const valuePass = document.getElementById('password').value

    if(valueEmail && valuePass){
      console.log(valueEmail)
      console.log(valuePass)

      registrar(valueEmail, valuePass).then((user) => console.log(user)).catch((error) => {
        if (error.code == 'auth/email-already-in-use') {
          openNotification({placement: 'topRight', title: 'ERRO', descricao: 'ESTE E-MAIL JÁ ESTA SENDO USADO. TENTE OUTRO!'})
        } else if (error.code == 'auth/invalid-email'){
          openNotification({placement: 'topRight', title: 'ERRO', descricao: 'ESTE É UM E-MAIL INVÁLIDO. TENTE NOVAMENTE!'})
        } else if(error.code == 'auth/weak-password'){
          openNotification({placement: 'topRight', title: 'ERRO', descricao: 'SENHA FRACA. UTILIZE AO MENOS 6 CARACTERES!'})
        }
      })
    }
  }

  const [api, contextHolder] = notification.useNotification();
  const openNotification = ({placement, title, descricao}) => {
      api.info({
          message: `${title}`,
          description: `${descricao}`,
          placement,
      });
  }

  if(user || acessoVisitante){
    return(
      <div>
        <MainContainer>
          <Head>
            <meta http-equiv="X-UA-Compatible" content="IE=edge"></meta>
            <meta name="viewport" content="width=device-width, initial-scale=1.0"></meta>
            <link href="https://fonts.googleapis.com/css2?family=Playpen+Sans:wght@200;400;800&display=swap" rel="stylesheet"></link>
            <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
            <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
          </Head>
          <Component {...pageProps} />
        </MainContainer>
      </div>
    )
  }
  
  return (
    <main className={styles.body}>
      {contextHolder}
      <div className={styles.main}>
        <h1>{hasLogin ? 'Bem-Vindo' : 'Crie Sua Conta'}</h1>
        <div className={styles.username}>
            <div class='form-floating'>
                <input 
                    type="text" 
                    id="username" 
                    class="form-control shadow-none" 
                    required
                    placeholder="fulado123@gmail.com" 
                    minlength="1" 
                    maxlength="50"
                >
                </input>
                <label for="username">Usuário</label>
            </div>
        </div>
        <div className={styles.password}>
            <div class='form-floating'>
                <input 
                    type="password" 
                    id="password" 
                    class="form-control shadow-none" 
                    required
                    placeholder="********" 
                    minlength="1" 
                    maxlength="8"
                >
                </input>
                <label for="password">Senha</label>
            </div>
        </div>

        <div onClick={hasLogin ? handlerLogin : handlerRegistrar} className={styles.buttonCheck}>
            {hasLogin ? 'Login' : 'Cadastrar'}
        </div>

        <div onClick={toggleOpLogin} className={styles.toggleButton}>
            {hasLogin ? 'Ainda não tem Conta? Cadastre-se agora' : 'Voltar ao Login'}
        </div>
      </div>
      <div onClick={opVisitante} className={styles.acessoVisitante}>
          Navegue como Visitante
      </div>
    </main>
  )
}
